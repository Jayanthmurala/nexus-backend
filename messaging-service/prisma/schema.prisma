// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  firstName String
  lastName  String
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Messaging relationships
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  conversations    Conversation[]
  participants     ConversationParticipant[]

  @@map("users")
}

model Conversation {
  id        String   @id @default(cuid())
  type      ConversationType @default(DIRECT)
  name      String?  // For group conversations
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  createdBy     User   @relation(fields: [createdById], references: [id])
  createdById   String
  participants  ConversationParticipant[]
  messages      Message[]

  @@map("conversations")
}

model ConversationParticipant {
  id             String   @id @default(cuid())
  conversationId String
  userId         String
  joinedAt       DateTime @default(now())
  lastReadAt     DateTime?
  isActive       Boolean  @default(true)

  // Relationships
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([conversationId, userId])
  @@map("conversation_participants")
}

model Message {
  id             String      @id @default(cuid())
  conversationId String
  senderId       String
  receiverId     String?     // For direct messages
  content        String
  type           MessageType @default(TEXT)
  fileUrl        String?     // For file/image messages
  fileName       String?     // Original filename
  fileSize       Int?        // File size in bytes
  status         MessageStatus @default(SENT)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  // Relationships
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender       User         @relation("SentMessages", fields: [senderId], references: [id])
  receiver     User?        @relation("ReceivedMessages", fields: [receiverId], references: [id])

  @@map("messages")
}

enum ConversationType {
  DIRECT
  GROUP
}

enum MessageType {
  TEXT
  IMAGE
  FILE
  SYSTEM
}

enum MessageStatus {
  SENT
  DELIVERED
  READ
}
